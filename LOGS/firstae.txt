AutoEncoder(
  (encoder): Encoder(
    (model): Sequential(
      (0): Sequential(
        (0): Conv2d(3, 16, kernel_size=(3, 3), stride=(2, 2))
        (1): ReLU()
        (2): Dropout2d(p=0.5, inplace=False)
        (3): Conv2d(16, 16, kernel_size=(2, 2), stride=(2, 2))
        (4): ReLU()
      )
      (1): Sequential(
        (0): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2))
        (1): ReLU()
        (2): Dropout2d(p=0.5, inplace=False)
        (3): Conv2d(32, 32, kernel_size=(2, 2), stride=(2, 2))
        (4): ReLU()
      )
      (2): Sequential(
        (0): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2))
        (1): ReLU()
        (2): Dropout2d(p=0.5, inplace=False)
        (3): Conv2d(64, 64, kernel_size=(2, 2), stride=(2, 2))
        (4): ReLU()
      )
    )
    (flatten): Flatten(start_dim=1, end_dim=-1)
    (encoder_lin): Sequential(
      (0): Linear(in_features=576, out_features=144, bias=True)
      (1): ReLU(inplace=True)
      (2): Linear(in_features=144, out_features=100, bias=True)
      (3): ReLU(inplace=True)
    )
  )
  (decoder): Decoder(
    (decoder_lin): Sequential(
      (0): Linear(in_features=100, out_features=144, bias=True)
      (1): ReLU(inplace=True)
      (2): Linear(in_features=144, out_features=576, bias=True)
      (3): ReLU(inplace=True)
    )
    (unflatten): Unflatten(dim=1, unflattened_size=(64, 3, 3))
    (model): Sequential(
      (0): Sequential(
        (0): ConvTranspose2d(64, 64, kernel_size=(2, 2), stride=(2, 2))
        (1): ReLU()
        (2): ConvTranspose2d(64, 32, kernel_size=(3, 3), stride=(2, 2))
        (3): ReLU()
        (4): Dropout2d(p=0.5, inplace=False)
      )
      (1): Sequential(
        (0): ConvTranspose2d(32, 32, kernel_size=(2, 2), stride=(2, 2))
        (1): ReLU()
        (2): ConvTranspose2d(32, 16, kernel_size=(3, 3), stride=(2, 2))
        (3): ReLU()
        (4): Dropout2d(p=0.5, inplace=False)
      )
      (2): Sequential(
        (0): ConvTranspose2d(16, 16, kernel_size=(2, 2), stride=(2, 2))
        (1): ReLU()
        (2): ConvTranspose2d(16, 3, kernel_size=(3, 3), stride=(2, 2))
        (3): ReLU()
        (4): Dropout2d(p=0.5, inplace=False)
      )
    )
  )
  (sigmoid): Sequential(
    (0): Sigmoid()
  )
)